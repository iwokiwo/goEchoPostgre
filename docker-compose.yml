version: '3'

services:
  app_golang2:
    container_name: full_app_golang
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '8085:8085'
    volumes:
      - api_golang2:/app/src/app/
    # depends_on:
    #   - postgres_test
      # - mysql_test
    networks:
      - fullstack_test

  # postgres_test:
  #   image: postgres:latest
  #   container_name: full_db_test_postgress
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}  
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   ports:
  #     - '5555:5432'
  #   volumes:
  #     - database_postgres_test:/var/lib/postgresql/data
  #   networks:
  #     - fullstack_test
    
  # mysql_test:
  #   image: mysql:5.7
  #   container_name: full_db_test_mysql    
  #   ports: 
  #     - 3333:3306
  #   environment: 
  #     - MYSQL_DATABASE=${TEST_DB_NAME}
  #     - MYSQL_USER=${TEST_DB_USER}
  #     - MYSQL_PASSWORD=${TEST_DB_PASSWORD}
  #     - MYSQL_ROOT_PASSWORD=${TEST_DB_PASSWORD}
  #     - DATABASE_HOST=${TEST_DB_HOST} 
  #   volumes:
  #     - database_mysql_test:/var/lib/mysql
  #   networks:
  #     - fullstack_test
  
volumes:
  api_golang2:
#   database_postgres_test:
  # database_mysql_test:

networks:
  fullstack_test:
    driver: bridge